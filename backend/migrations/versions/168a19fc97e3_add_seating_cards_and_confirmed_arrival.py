"""add_seating_cards_and_confirmed_arrival

Revision ID: 168a19fc97e3
Revises: 61ad9f589296
Create Date: 2025-07-29 23:30:41.074361

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '168a19fc97e3'
down_revision: Union[str, Sequence[str], None] = '61ad9f589296'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('seating_cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('guest_id', sa.Integer(), nullable=False),
    sa.Column('seating_id', sa.Integer(), nullable=False),
    sa.Column('qr_code', sa.Text(), nullable=False),
    sa.Column('card_data', sa.Text(), nullable=False),
    sa.Column('logo_path', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_downloaded', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['guest_id'], ['guests.id'], ),
    sa.ForeignKeyConstraint(['seating_id'], ['seatings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_seating_cards_id'), 'seating_cards', ['id'], unique=False)
    op.drop_index(op.f('ix_audit_log_id'), table_name='audit_log')
    op.drop_table('audit_log')
    op.add_column('guests', sa.Column('confirmed_arrival', sa.Boolean(), nullable=True))
    op.add_column('seatings', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('seatings', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('seatings', 'guest_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('seatings', 'event_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('seatings', 'table_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('unique_guest_per_event'), 'seatings', type_='unique')
    op.create_index(op.f('ix_seatings_id'), 'seatings', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_seatings_id'), table_name='seatings')
    op.create_unique_constraint(op.f('unique_guest_per_event'), 'seatings', ['guest_id', 'event_id'], postgresql_nulls_not_distinct=False)
    op.alter_column('seatings', 'table_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('seatings', 'event_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('seatings', 'guest_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('seatings', 'updated_at')
    op.drop_column('seatings', 'created_at')
    op.drop_column('guests', 'confirmed_arrival')
    op.create_table('audit_log',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('entity_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('entity_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('field', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('old_value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('new_value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('audit_log_pkey'))
    )
    op.create_index(op.f('ix_audit_log_id'), 'audit_log', ['id'], unique=False)
    op.drop_index(op.f('ix_seating_cards_id'), table_name='seating_cards')
    op.drop_table('seating_cards')
    # ### end Alembic commands ###
